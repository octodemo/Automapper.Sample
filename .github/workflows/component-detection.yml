name: Dependency SUbmission

on:
  workflow_dispatch:
  push:

permissions: 
  id-token: write
  contents: write

jobs:
  dependency-submission:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Dotnet Info Before
        run: dotnet --info
      # https://dotnet.microsoft.com/en-us/download/dotnet/3.1
      - name: Setup .NET Core SDK to INTENTIONALLY VULNERABLE 3.1.12 (3.1.406 SDK) version
        uses: actions/setup-dotnet@v3.0.3
        with:
          # Optional SDK version(s) to use. If not provided, will install global.json version when available. Examples: 2.2.104, 3.1, 3.1.x, 3.x
          dotnet-version: 3.1.406
      - name: install dotnet-core-uninstall linux
        if: runner.os != 'Windows'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release download --repo dotnet/cli-lab --pattern 'dotnet-core-uninstall.tar.gz'
          tar -xvzf dotnet-core-uninstall.tar.gz
          chmod +x dotnet-core-uninstall
          ./dotnet-core-uninstall list
      - name: install dotnet-core-uninstall windows
        if: runner.os == 'Windows'
        continue-on-error: true
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release download --repo dotnet/cli-lab --pattern '*.msi'
          msiexec /i dotnet-core-uninstall-1.6.0.msi /quiet /qn /norestart /log "${{vars.GITHUB_WORKSPACE}}/install.log"
          cat install.log
          & "$env:programfiles (x86)\dotnet-core-uninstall\dotnet-core-uninstall.exe" list
      - name: Dotnet Info After
        run: dotnet --info        
      - name: Build
        run: dotnet build
      - name: List Vulnerable
        run: dotnet list package --vulnerable --include-transitive
      - name: Component detection 
        if: runner.os != 'Windows'
        uses: jhutchings1/component-detection-action@v0.0.1
      - name: Run Trivy in GitHub SBOM mode and submit results to Dependency Snapshots
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'github'
          output: 'dependency-results.sbom.json'
          #image-ref: '.'
          github-pat: '${{ secrets.GITHUB_TOKEN }}'
